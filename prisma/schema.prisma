generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextIndex", "fullTextSearch"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model attachment {
  id        String   @id
  name      String
  url       String   @db.Text
  courseId  String
  createdAt DateTime @default(now())
  updatedAt DateTime

  @@index([courseId], map: "Attachment_courseId_idx")
}

model category {
  id   String @id
  name String @unique(map: "Category_name_key")
}

model chapter {
  id          String   @id
  title       String
  description String?  @db.Text
  videoUrl    String?  @db.Text
  position    Int
  isPublished Boolean  @default(false)
  isFree      Boolean  @default(false)
  courseId    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime

  @@index([courseId], map: "Chapter_courseId_idx")
}

model course {
  id          String   @id
  title       String   @db.Text
  description String?  @db.Text
  imageUrl    String?  @db.Text
  price       Float?
  isPublished Boolean  @default(false)
  categoryId  String?
  createdAt   DateTime @default(now())
  updateAt    DateTime

  @@index([categoryId], map: "Course_categoryId_idx")
  @@fulltext([title], map: "Course_title_idx")
}

model muxdata {
  id         String  @id
  assetId    String
  playbackId String?
  chapterId  String  @unique(map: "MuxData_chapterId_key")
}

model purchase {
  id        String   @id
  userId    String
  courseId  String
  createdAt DateTime @default(now())
  updatedAt DateTime

  @@unique([userId, courseId], map: "Purchase_userId_courseId_key")
  @@index([courseId], map: "Purchase_courseId_idx")
}

model stripecustomer {
  id               String   @id
  userId           String   @unique(map: "StripeCustomer_userId_key")
  stripeCustomerId String   @unique(map: "StripeCustomer_stripeCustomerId_key")
  createdAt        DateTime @default(now())
  updatedAt        DateTime
}

model userprogress {
  id          String   @id
  userId      String
  chapterId   String
  isCompleted Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime

  @@unique([userId, chapterId], map: "UserProgress_userId_chapterId_key")
  @@index([chapterId], map: "UserProgress_chapterId_idx")
}
